// Code generated by ArduinoML
// Structural concepts
void setup() {
	pinMode(1, INPUT);
	pinMode(11, OUTPUT);
	pinMode(9, INPUT);
}

//Behavioral concepts
long time=0; long debounce = 200;

void mode_unicorn() {
	//initial state
	state_unicorn_sleeping();
}

void unicorn_to_drake(){
	boolean guard = millis() - time > debounce;
	if( analogRead(1) >= 333 && analogRead(1) < 666 && guard ) {
		time = millis();
		mode_drake();
	}
}
void unicorn_to_phoenix(){
	boolean guard = millis() - time > debounce;
	if( analogRead(1) >= 666 && analogRead(1) < 999 && guard ) {
		time = millis();
		mode_phoenix();
	}
}
void state_unicorn_sleeping() {
	digitalWrite(11, LOW);
	boolean guard = millis() - time > debounce;
	unicorn_to_drake();
	unicorn_to_phoenix();
	if( digitalRead(9) == HIGH && guard ) {
		time = millis();
		state_unicorn_awake();
	}
	else {
		state_unicorn_sleeping(); 
	}
}

void state_unicorn_awake() {
	digitalWrite(11, HIGH);
	boolean guard = millis() - time > debounce;
	unicorn_to_drake();
	unicorn_to_phoenix();
	if( digitalRead(9) == HIGH && guard ) {
		time = millis();
		state_unicorn_sleeping();
	}
	else {
		state_unicorn_awake(); 
	}
}

void mode_drake() {
	//setup bricks
	pinMode(10, INPUT);
	//initial state
	state_drake_idle();
}

}

void drake_to_unicorn(){
	boolean guard = millis() - time > debounce;
	if( analogRead(1) < 333 && guard ) {
		time = millis();
		mode_unicorn();
	}
}
void drake_to_phoenix(){
	boolean guard = millis() - time > debounce;
	if( analogRead(1) >= 666 && analogRead(1) < 999 && guard ) {
		time = millis();
		mode_phoenix();
	}
}
void state_drake_idle() {
	digitalWrite(11, LOW);
	boolean guard = millis() - time > debounce;
	drake_to_unicorn();
	drake_to_phoenix();
	if( digitalRead(9) == HIGH && guard ) {
		time = millis();
		state_drake_fireup();
	}
	else {
		state_drake_idle(); 
	}
}

void state_drake_fireup_idle() {
	digitalWrite(11, LOW);
	boolean guard = millis() - time > debounce;
	drake_to_unicorn();
	drake_to_phoenix();
	delay(1000);
	state_drake_fireup();
	if( digitalRead(9) == HIGH && guard ) {
		time = millis();
		state_drake_idle();
	}
	else {
		state_drake_fireup_idle(); 
	}
}

void state_drake_fireup() {
	digitalWrite(11, HIGH);
	boolean guard = millis() - time > debounce;
	drake_to_unicorn();
	drake_to_phoenix();
	delay(1000);
	state_drake_fireup_idle();
	if( digitalRead(9) == HIGH && guard ) {
		time = millis();
		state_drake_idle();
	}
	else {
		state_drake_fireup(); 
	}
}

void mode_phoenix() {
	//setup bricks
	pinMode(12, OUTPUT);
	//initial state
	state_phoenix_idle();
}

void reset_phoenix() {
	digitalWrite(12, LOW);
}

void phoenix_to_unicorn(){
	boolean guard = millis() - time > debounce;
	if( analogRead(1) < 333 && guard ) {
		reset_phoenix();
		time = millis();
		mode_unicorn();
	}
}
void phoenix_to_drake(){
	boolean guard = millis() - time > debounce;
	if( analogRead(1) >= 333 && analogRead(1) < 666 && guard ) {
		reset_phoenix();
		time = millis();
		mode_drake();
	}
}
void state_phoenix_idle() {
	digitalWrite(11, LOW);
	digitalWrite(12, LOW);
	boolean guard = millis() - time > debounce;
	phoenix_to_unicorn();
	phoenix_to_drake();
	if( digitalRead(9) == HIGH && guard ) {
		time = millis();
		state_phoenix_shining();
	}
	else {
		state_phoenix_idle(); 
	}
}

void state_phoenix_shining() {
	digitalWrite(11, HIGH);
	digitalWrite(12, HIGH);
	boolean guard = millis() - time > debounce;
	phoenix_to_unicorn();
	phoenix_to_drake();
	if( digitalRead(9) == HIGH && guard ) {
		time = millis();
		state_phoenix_idle();
	}
	else {
		state_phoenix_shining(); 
	}
}

void loop() {mode_unicorn();} // Entering init mode