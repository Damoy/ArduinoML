/*
 * generated by Xtext 2.16.0
 */
package arduinoML.concretesyntax.formatting2

import arduinoML.App
import arduinoML.State
import arduinoML.concretesyntax.services.ArduinoMLGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class ArduinoMLFormatter extends AbstractFormatter2 {
	
	@Inject extension ArduinoMLGrammarAccess

	def dispatch void format(App app, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (brick : app.bricks) {
			brick.format
		}
		for (state : app.states) {
			state.format
		}
	}

	def dispatch void format(State state, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (action : state.actions) {
			action.format
		}
		for (transition : state.transitions_state) {
			transition.format
		}
	}
	
	// TODO: implement for 
}
