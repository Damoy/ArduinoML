// automatically generated by Xtext
grammar arduinoML.concretesyntax.ArduinoML with org.eclipse.xtext.common.Terminals

import "fr.uns.polytech.al.arduinoML" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

App returns App:
	(('app' name=EString 'initial' 'state' initial_state=[State|EString] ':'
		'bricks' ':'
		bricks+=Brick
		(bricks+=Brick)*
		 
		'states' ':'
		states+=State
		(states+=State)*)  |
		
	('app' name=EString 'initial' 'mode' initial_mode=[Mode|EString] ':'
		'bricks' ':'
		bricks+=Brick
		(bricks+=Brick)*
		 
		'modes' ':'
		modes+=Mode
		(modes+=Mode)*))
	;

Brick returns Brick:
	(Actuator | Digital | Analog) name=EString ':' pin=EInt;

EString returns ecore::EString:
	STRING | ID;
	
Mode returns Mode:
	name=EString 'initial' 'state' initial=[State|EString] ':'
		('bricks' ':'
		bricks+=Brick
		(bricks+=Brick)*)?
		 
		'states' ':'
		states+=State
		(states+=State)*
;

State returns State:
	name=EString ':'
		actions+=Action
		(actions+=Action)*
		transitions+=Transition
		(transitions+=Transition)*
	;

EInt returns ecore::EInt:
	INT;

Actuator returns Actuator:
	{Actuator}
	'Actuator';

Digital returns Digital:
	{Digital}
	'Digital';
	
Analog returns Analog:
	{Analog}
	'Analog';

Action returns Action:
	'change' actuator=[Actuator|EString] 'to' value=Signal;

Transition returns Transition:
    (('when' (digitals+=[Digital|EString] 'is' d_values+=Signal | analogs+=[Analog|EString] comp+=Compare a_values+=EInt) ('and' (digitals+=[Digital|EString] 'is' d_values+=Signal | analogs+=[Analog|EString] comp+=Compare a_values+=EInt))* ('wait' time=EInt unit=Time_unit 'then')?) | ('wait' time=EInt unit=Time_unit 'then')) 'go' 'to' (('state' next_state=[State|EString]) | ('mode' next_mode=[Mode|EString]));

enum Signal returns Signal:
				HIGH = 'HIGH' | LOW = 'LOW';
				
enum Time_unit returns Time_unit:
				ms = 'ms' | s = 's' | min = 'min';
				
enum Compare returns Compare:
				inf = 'inf' | einf = 'einf' | equal = 'equal' | esup = 'esup' | sup = 'sup'
;